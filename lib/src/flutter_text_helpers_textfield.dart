import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/services.dart';
import 'package:flutter/widgets.dart';
import 'typos.dart';
import 'dart:ui' as ui show BoxHeightStyle, BoxWidthStyle;

class _TheTextField extends StatelessWidget {
  final String data;
  final TextStyle style;
  final TextDirection textDirection;
  final int maxLines;
  final StrutStyle strutStyle;
  final TextAlign textAlign;
  final Typo typo;
  final Color color;
  final double fontSize;
  final TextEditingController controller;
  final FocusNode focusNode;
  final InputDecoration decoration;
  final TextInputType keyboardType;
  final TextInputAction textInputAction;
  final TextCapitalization textCapitalization;
  final TextAlignVertical textAlignVertical;
  final bool autofocus;
  final String obscuringCharacter;
  final bool obscureText;
  final bool autocorrect;
  final SmartDashesType smartDashesType;
  final SmartQuotesType smartQuotesType;
  final bool enableSuggestions;
  final int minLines;
  final bool expands;
  final bool readOnly;
  final ToolbarOptions toolbarOptions;
  final bool showCursor;
  final int maxLength;
  final bool maxLengthEnforced;
  final ValueChanged<String> onChanged;
  final ValueChanged<String> onSubmitted;
  final AppPrivateCommandCallback onAppPrivateCommand;
  final List<TextInputFormatter> inputFormatters;
  final bool enabled;
  final double cursorWidth;
  final double cursorHeight;
  final Radius cursorRadius;
  final Color cursorColor;
  final ui.BoxHeightStyle selectionHeightStyle;
  final ui.BoxWidthStyle selectionWidthStyle;
  final Brightness keyboardAppearance;
  final EdgeInsets scrollPadding;
  final bool enableInteractiveSelection;
  final DragStartBehavior dragStartBehavior;
  bool get selectionEnabled => enableInteractiveSelection;
  final GestureTapCallback onTap;
  final MouseCursor mouseCursor;
  final InputCounterWidgetBuilder buildCounter;
  final ScrollPhysics scrollPhysics;
  final ScrollController scrollController;
  final Iterable<String> autofillHints;
  final String restorationId;
  final VoidCallback onEditingComplete;

  _TheTextField(
    this.data,
    this.typo, {
    this.style,
    this.color,
    this.fontSize,
    this.textAlign,
    this.maxLines,
    this.strutStyle,
    this.textDirection,
    this.controller,
    this.focusNode,
    this.decoration,
    this.keyboardType,
    this.textInputAction,
    this.textCapitalization,
    this.textAlignVertical,
    this.readOnly = false,
    this.toolbarOptions,
    this.showCursor,
    this.autofocus = false,
    this.obscuringCharacter,
    this.obscureText = false,
    this.autocorrect = true,
    this.smartDashesType,
    this.smartQuotesType,
    this.enableSuggestions = true,
    this.minLines,
    this.expands = false,
    this.maxLength,
    this.maxLengthEnforced = true,
    this.onChanged,
    this.onEditingComplete,
    this.onSubmitted,
    this.onAppPrivateCommand,
    this.inputFormatters,
    this.enabled,
    this.cursorWidth = 2.0,
    this.cursorHeight,
    this.cursorRadius,
    this.cursorColor,
    this.selectionHeightStyle = ui.BoxHeightStyle.tight,
    this.selectionWidthStyle = ui.BoxWidthStyle.tight,
    this.keyboardAppearance,
    this.scrollPadding = const EdgeInsets.all(20.0),
    this.dragStartBehavior = DragStartBehavior.start,
    this.enableInteractiveSelection = true,
    this.onTap,
    this.mouseCursor,
    this.buildCounter,
    this.scrollController,
    this.scrollPhysics,
    this.autofillHints,
    this.restorationId,
  });

  @override
  Widget build(BuildContext context) {
    var finalStyle = styles(context)[Typo.BodyText1];
    var finalDecoration = InputDecoration();

    if (decoration != null) {
      finalDecoration = decoration;
    }
    if (data != null) {
      finalDecoration = finalDecoration.copyWith(hintText: data);
    }

    if (typo != null) {
      finalStyle = styles(context)[typo];
    }

    if (color != null) {
      finalStyle = finalStyle.copyWith(color: color);
    }

    if (fontSize != null) {
      finalStyle = finalStyle.copyWith(fontSize: fontSize);
    }

    if (style != null) {
      finalStyle = finalStyle.copyWith(color: style.color);
    }

    return TextField(
        autocorrect: autocorrect,
        autofillHints: autofillHints,
        autofocus: autofocus,
        buildCounter: buildCounter,
        controller: controller,
        cursorColor: cursorColor,
        cursorHeight: cursorHeight,
        cursorRadius: cursorRadius,
        cursorWidth: cursorWidth,
        dragStartBehavior: dragStartBehavior,
        enableInteractiveSelection: enableInteractiveSelection,
        enableSuggestions: enableSuggestions,
        enabled: enabled,
        expands: expands,
        focusNode: focusNode,
        inputFormatters: inputFormatters,
        keyboardAppearance: keyboardAppearance,
        keyboardType: keyboardType,
        maxLength: maxLength,
        maxLengthEnforced: maxLengthEnforced,
        minLines: minLines,
        mouseCursor: mouseCursor,
        obscureText: obscureText,
        obscuringCharacter: obscuringCharacter,
        onAppPrivateCommand: onAppPrivateCommand,
        onChanged: onChanged,
        onEditingComplete: onEditingComplete,
        onSubmitted: onSubmitted,
        onTap: onTap,
        readOnly: readOnly,
        restorationId: restorationId,
        scrollController: scrollController,
        scrollPadding: scrollPadding,
        scrollPhysics: scrollPhysics,
        selectionHeightStyle: selectionHeightStyle,
        selectionWidthStyle: selectionWidthStyle,
        showCursor: showCursor,
        smartDashesType: smartDashesType,
        smartQuotesType: smartQuotesType,
        textAlignVertical: textAlignVertical,
        textCapitalization: textCapitalization,
        textInputAction: textInputAction,
        toolbarOptions: toolbarOptions,
        style: finalStyle,
        textDirection: textDirection,
        maxLines: maxLines,
        strutStyle: strutStyle,
        textAlign: textAlign,
        decoration: finalDecoration);
  }
}

class BodyTextField1 extends _TheTextField {
  BodyTextField1(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.BodyText1,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class BodyTextField2 extends _TheTextField {
  BodyTextField2(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.BodyText2,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField1 extends _TheTextField {
  HeadlineTextField1(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText1,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField2 extends _TheTextField {
  HeadlineTextField2(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText2,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField3 extends _TheTextField {
  HeadlineTextField3(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText3,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField4 extends _TheTextField {
  HeadlineTextField4(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText4,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField5 extends _TheTextField {
  HeadlineTextField5(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText5,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class HeadlineTextField6 extends _TheTextField {
  HeadlineTextField6(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.HeadlineText6,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class SubtitleTextField1 extends _TheTextField {
  SubtitleTextField1(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.SubtitleText1,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class SubtitleTextField2 extends _TheTextField {
  SubtitleTextField2(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.SubtitleText2,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class ButtonTextField extends _TheTextField {
  ButtonTextField(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.ButtonText,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class CaptionTextField extends _TheTextField {
  CaptionTextField(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.CaptionText,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}

class OverlineTextField extends _TheTextField {
  OverlineTextField(
    data, {
    style,
    color,
    fontSize,
    textAlign = TextAlign.start,
    maxLines,
    strutStyle,
    textDirection,
    controller,
    focusNode,
    decoration,
    keyboardType,
    textInputAction,
    textCapitalization = TextCapitalization.none,
    textAlignVertical,
    readOnly = false,
    toolbarOptions,
    showCursor,
    autofocus = false,
    obscuringCharacter = '•',
    obscureText = false,
    autocorrect = true,
    smartDashesType,
    smartQuotesType,
    enableSuggestions = true,
    minLines,
    expands = false,
    maxLength,
    maxLengthEnforced = true,
    onChanged,
    onEditingComplete,
    onSubmitted,
    onAppPrivateCommand,
    inputFormatters,
    enabled,
    cursorWidth = 2.0,
    cursorHeight,
    cursorRadius,
    cursorColor,
    selectionHeightStyle = ui.BoxHeightStyle.tight,
    selectionWidthStyle = ui.BoxWidthStyle.tight,
    keyboardAppearance,
    scrollPadding = const EdgeInsets.all(20.0),
    dragStartBehavior = DragStartBehavior.start,
    enableInteractiveSelection = true,
    onTap,
    mouseCursor,
    buildCounter,
    scrollController,
    scrollPhysics,
    autofillHints,
    restorationId,
  }) : super(data, Typo.OverlineText,
            style: style,
            color: color,
            fontSize: fontSize,
            textAlign: textAlign,
            maxLines: maxLines,
            strutStyle: strutStyle,
            textDirection: textDirection,
            controller: controller,
            focusNode: focusNode,
            decoration: decoration,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textCapitalization: textCapitalization,
            textAlignVertical: textAlignVertical,
            readOnly: readOnly,
            toolbarOptions: toolbarOptions,
            showCursor: showCursor,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            maxLengthEnforced: maxLengthEnforced,
            onChanged: onChanged,
            onEditingComplete: onEditingComplete,
            onSubmitted: onSubmitted,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            cursorColor: cursorColor,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            keyboardAppearance: keyboardAppearance,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId);
}
